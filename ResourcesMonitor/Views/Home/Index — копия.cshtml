@{
    ViewBag.Title = "Resources Monitor";
}

<div class="vertical-gap">
</div>

<div id="main-block-for-adding" class="very-main-block">    
    <div class="outer-spinner">
        <div class="middle-spinner-inner-block">
            <div class="center-spinner-block">
                <div class="spinner-text">Loading...</div>
                <img class="spinner" src="~/Content/Spinners/spinner1.gif">
            </div>
        </div>
    </div>
</div>

<style>

    hr {
        margin-top: 1px!important;
        margin-bottom: 9px!important;
    }

    .block-website-main-info {
        font-size: 20px;
        padding: 10px;
        margin-right: 10px;
        border-width: 3px;
        border-style: solid;
        border-color: rgba(128, 128, 128, 0.45);
        border-radius: 15px;
        margin-bottom: 5px;
        margin-right: 5px;
        padding: 5px;
    }

    .site-status-text-online {
        color: green;
        font-weight: bolder;
    }

    .fa-refresh:before {
        color: #ffffff!important;
    }

    .navbar-inverse .navbar-nav > .dropdown > a .caret {
        border-top-color: #ffffff!important;
        border-bottom-color: #ffffff!important;
    }

    .navbar-inverse {
        background-color: #46B45D!important;
        border-color: #46B45D!important;
    }

    .navbar-inverse .navbar-brand {
        color: #f8f8f8!important;
    }

    .navbar-inverse .navbar-nav > li > a {
        color: #fffdfd!important;
        font-size: 12px;
    }

    .very-main-block {
    }

    .error-text-wrapper {
        max-height: 150px;
        overflow-y: scroll;
    }

    .spinner-text {
        font-size: 19px;
        padding-bottom:20px;
    }

    .outer-spinner {
        display: table;
        height: 80vh;
        width: 100%;
    }

    .middle-spinner-inner-block {
        display: table-cell;
        vertical-align: middle;       
    }

    .center-spinner-block {
          text-align:center;
    }

    .vertical-gap {
        height:20px;
    }

    .services-info-header {
        display:inline-block;
        padding-top:10px;
        font-size: 15px;
        align-self:center;
    }

    .sql-info-header {
        display:inline-block;
        padding-top:10px;
        font-size: 15px;
        align-self:center;
    }

    .service-ok {
        color: green;
    }

    .service-fail {
        color: red;
    }

    .sql-logo {
        width: 70px;
    }

    .hdd-logo {
        width: 70px;
    }

    .services-logo {
        width: 70px;
    }

    .sql-info-wrapper {
        padding-left: 10px;
        padding-top: 10px;    
    }

    .services-info-wrapper {
        padding-left: 10px;
        padding-top: 10px;
        display: inline-block;
        vertical-align: top;
    }

    .disk-info-wrapper {
        padding-left: 5px;
        padding-top: 10px;
    }

    .sql-info-logo {
    }

    .services-info-logo {
        display: inline-block;
        vertical-align: top;
        align-content:flex-end;
    }

    .disk-info-logo {
        display: inline-block;
        vertical-align: top;
    }

    .block-disk-sizes {
        display: inline-block;
        font-family: monospace;
        font-size: 21px;
        font-weight: bold;
    }

    .server-logo {
        width: 70px;
    }

    .server-text-info {
        vertical-align: top;
    }

    .server-text-info {
        display: inline-block;
    }

    .block-server-logo{
        display: inline-block;
        padding-right: 15px;
    }

    .sql-info-header {
        font-size: 15px;
    }

    .host-name-header {
        font-size: 24px;
        font-weight: bolder;
    }

    .ip-header {
        font-size: 17px;
    }

    .ping-header {
        font-size: 15px;
    }

    .servers-logic-group-caption {
        font-size: 24px;
        background:#ffffff;
        width : unset;
        margin-top:-23px;       
        margin-left:5px;
        background:white;
        display: inline-block;
        padding:3px;
        padding-left:5px;
        padding-right:5px;
        vertical-align:top;
    }

    .servers-logic-group {
        border-style:solid;
        border-width: 5px;
        border-color: rgb(70, 180, 93);
        border-radius: 15px;
        margin-bottom: 21px;
        margin-right: 10px;
        padding-left: 10px;
        padding-right: 0px;
        padding-bottom: 0px;
        display: inline-block;
        vertical-align: top;
    }

    .main-resources-block {
        vertical-align: top;
        min-height: 100% !important;
        height:100% !important;
        border-width: 3px;
        border-style:solid;        
        border-color: rgba(128, 128, 128, 0.45);
        border-radius: 15px;
        margin-bottom: 5px;
        margin-right: 5px;
        padding: 5px;
    }

    .block-server-main-info {
        font-size: 15px;
        padding-top: 9px;

        display: inline-block;
        vertical-align: top;
    }

    .all-blocks-wrapper {
        padding: 15px;
        width:25%;
    }

    .blinking{
        animation:blinkingText 0.8s infinite;
        padding:3px;
    }
    @@keyframes blinkingText{
        0%{     color: yellow;  background-color: red   }
        49%{    color: transparent;   background-color: transparent  }
        50%{    color: transparent; background-color: transparent}
        /*99%{    color: transparent;  }*/
        100%{   color: yellow;  background-color: red   }
    }

    .blinking1{
        animation:blinkingText1 0.9s infinite;
        padding:3px;
    }
    @@keyframes blinkingText1{
        0%{     color: red;  background-color: transparent}
        49%{   color: red;  background-color: transparent}
        50%{    color: transparent; background-color: transparent}
        100%{    color: transparent; background-color: transparent}
    }

    .common-error-text {
        width: 220px;
        display:none;
    }

    .alert-triangle {
        color: red;
    }

    .icons-awesome {
        color: #293230bf;
        display: inline-block;
    }

    .error-caption-text {
        font-size: 18px;
        display:inline-block;
    }
</style>    

@section scripts{
    <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
    <script src="~/Scripts/leader-line-master/leader-line.min.js"></script>
    <script src="~/Scripts/jquery-progresspiesvg-min.js"></script>

    <script src="\Scripts\jquery-confirm\jquery-confirm.min.js"></script>
    <link rel="stylesheet" href="\Scripts\jquery-confirm\jquery-confirm.min.css" />

    <!--Ссылка на автоматически сгенерированный скрипт хаба SignalR -->
    <script src="~/signalr/hubs"></script>
    <script type="text/javascript">

        const RESULT_OK = 0;
        const RESULT_COMMON_HANDLED_ERROR = -2;
        var counter = 0;
        var isFirstInit = true;
        var lastUpdateTime;

        $(function () {
            var notificationhub = $.connection.notificationHub;
            notificationhub.client.displayMessage = function (message) {
                parsedMessage = JSON.parse(message);
                if (parsedMessage.ErrorCode == RESULT_OK || parsedMessage.ErrorCode == RESULT_COMMON_HANDLED_ERROR) {
                    
                    if (isFirstInit) {
                        $(".outer-spinner").remove();
                        // Создание блоков
                        createBlocks(parsedMessage.Data);
                        updateSyncLastTime();
                        isFirstInit = false;
                        //console.log(parsedMessage.Data);
                    }
                    else {
                        //console.log(parsedMessage.Data);
                        $(".update-spinner").css("display", "inline-block");                        
                        // Обновление блоков
                        updateBlocks(parsedMessage.Data);
                        
                        for (var i = 0; i < parsedMessage.Data.ServersLogicGroupsDto.length; i++) {
                            var groupId = parsedMessage.Data.ServersLogicGroupsDto[i].Id;
                            var websiteStatesDto = parsedMessage.Data.ServersLogicGroupsDto[i].WebsiteStatesDto;
                            if (websiteStatesDto != null && websiteStatesDto.length != 0) {
                                makeSitesBlock(groupId, websiteStatesDto);
                            }
                        }

                        setTimeout(function () {
                            $(".update-spinner").css("display", "none");
                            updateSyncLastTime();
                        }, 1500);
                    }

                    if (parsedMessage.ErrorCode == RESULT_OK) {
                        var serverData = parsedMessage.Data.ServersStatusDto;
                        for (var i = 0; i < serverData.length; i++) {
                            var serverId = serverData[i].Id;
                            $('#commonErrorText_' + serverId).css("display", "none");
                        }
                    }
                    if (parsedMessage.ErrorCode == RESULT_COMMON_HANDLED_ERROR) {
                        try {
                            var serverData = parsedMessage.Data.ServersStatusDto;
                            for (var i = 0; i < serverData.length; i++) {
                                var serverId = serverData[i].Id;
                                var errorText = serverData[i].ErrorMessage;
                                if (errorText != '') {
                                    var errorHtml = '<div><div class="alert-triangle blinking1"><i class="fa fa-exclamation-triangle fa-3x" aria-hidden="true"></i> <div class="error-caption-text">ERROR</div></div><br><div class="error-text-wrapper">' + errorText + '</div></div>';
                                    $("#" + serverId).find('#commonErrorText_' + serverId)[0].innerHTML = errorHtml;
                                    $('#commonErrorText_' + serverId).css("display", "inline-block");
                                }
                            }
                        }
                        catch (ex) {
                            console.log(parsedMessage.ServerId + " Message: " + ex.message);
                        }
                    }                                    
                }
                else {
                    alert(parsedMessage.Message);
                }              
            };
            $.connection.hub.start();
        });

        function updateSyncLastTime() {
            var time = new Date();
            lastUpdateTime = time;
            var hh = time.getHours();
            if (hh < 10) {
                hh = "0" + hh;
            }
            var mm = time.getMinutes();
            if (mm < 10) {
                mm = "0" + mm;
            }
            var ss = time.getSeconds();
            if (ss < 10) {
                ss = "0" + ss;
            }
            $("#lastUpdateTime").text("Last update " + hh + ":" + mm + ":" + ss);
        }

        function createBlocks(blocksData) {
            if (blocksData == null) {
                return;
            }
            // Создаём блоки логической группировки серверов
            for (var i = 0; i < blocksData.ServersLogicGroupsDto.length; i++) {
                var groupId = blocksData.ServersLogicGroupsDto[i].Id;
                var groupCaption = blocksData.ServersLogicGroupsDto[i].Caption;
                var websiteStatesDto = blocksData.ServersLogicGroupsDto[i].WebsiteStatesDto;
                makeServerLogicGroup(groupId, groupCaption, websiteStatesDto);
            }
            //setTimeout(function () {
            for (var j = 0; j < blocksData.ServersStatusDto.length; j++) {
                var serverId = blocksData.ServersStatusDto[j].Id;
                var currentGroupId = blocksData.ServersStatusDto[j].LogicGroupId;
                makeServerBlock(serverId, currentGroupId);
                // Заполнение информации по дискам 
                var disksSpaces = blocksData.ServersStatusDto[j].DiskSpace;
                for (var diskIndex = 0; diskIndex < disksSpaces.length; diskIndex++) {
                    var diskInfo = blocksData.ServersStatusDto[j].DiskSpace[diskIndex];

                    // Добавление диска
                    var letterForId = diskInfo.Letter.replace(':', '');
                    var disksHtml = $('<div id="disk_' + letterForId + '"><span id="letter' + diskIndex + '">' + diskInfo.Letter +
                        '/</span><span id="size' + diskIndex + '" class="sizeChart">' + diskInfo.FullnessPercent + '%</span> <span  id="freeSpace' + diskIndex + '" >(' + diskInfo.FreeSpaceToDisplay + ') </span></div>');
                    $("#" + serverId).children().find('.block-disk-sizes').append(disksHtml);
                }

                // Заполнение информации по службам
                var services = blocksData.ServersStatusDto[j].WindowsServicesStatuses;
                if (services.length == 0){
                    $("#" + serverId).find(".services-info-wrapper").remove();
                }
                for (var serviceIndex = 0; serviceIndex < services.length; serviceIndex++) {
                    var name = services[serviceIndex].Name;
                    var state = services[serviceIndex].StateName;
                    
                    var className = 'service-ok';
                    if (state != 'Running') {
                        className = 'blinking';
                    }
                    var serviceHtml = '<div><span id="serviceName' + serviceIndex + '">' + name + '</span> <span id="serviceState' + serviceIndex + '" class="' + className + '">' + state + '</span></div>';
                    $("#" + serverId).children().find('.services-info-text').append(serviceHtml);              
                }
                // Если служб больше 5, то располагаем их сбоку
                if (services.length <= 5) {
                     $('#' + serverId).find('.block-server-main-info').css("display", "block");
                }               

                // Заполнение информации по базам
                var baseUnderMonitoring = blocksData.ServersStatusDto[j].IsSqlBaseUnderMonitoring;               
                
                if (!baseUnderMonitoring) {
                    $("#" + serverId).find(".sql-info-wrapper").remove();
                }
                else {
                    $("#" + serverId).find("#allBasesOkCaption").remove();
                    
                    var baseStatesHtml = '';
                    var baseProblems = blocksData.ServersStatusDto[j].SqlBasesWithProblems;
                    for (var baseIndex = 0; baseIndex < baseProblems.length; baseIndex++) {
                        baseStatesHtml += '<div class="baseError"><span><b>' + baseProblems[baseIndex].Name + '</b>: ' + baseProblems[baseIndex].Status + ' ❌</span></div>';
                    }
                    $("#" + serverId).children().find('.bases-info-text').append(baseStatesHtml);
                    $("#" + serverId).children().find('.sql-info-logo').addClass('blinking1');                   
                }
            }              
            initCharts();
            updateBlocks(blocksData);
        }

        function updateBlocks(blocksData) {
            if (blocksData == null) {
                return;
            }
            for (var j = 0; j < blocksData.ServersStatusDto.length; j++) {
                var serverData = blocksData.ServersStatusDto[j];
                var serverId = serverData.Id;
                var pingText = "";
                if (serverData.Ping == 0) {
                    pingText = "< 1";
                }
                else {
                    pingText = serverData.Ping;
                }
                $("#" + serverId).children().find('.host-name-header')[0].innerText = serverData.HostName;
                $("#" + serverId).children().find('.ip-header')[0].innerText = 'IP: ' + serverData.Ip;
                $("#" + serverId).children().find('.ping-header')[0].innerText = 'Ping: ' + pingText + ' ms';

                // Обновление информации по дискам
                try {
                    var disksSpaces = blocksData.ServersStatusDto[j].DiskSpace;
                    for (var diskIndex = 0; diskIndex < disksSpaces.length; diskIndex++) {
                        var diskInfo = blocksData.ServersStatusDto[j].DiskSpace[diskIndex];

                        var currentDiskId = 'disk_' + diskInfo.Letter;
                        var letterForId = currentDiskId.replace(':', '');
                        if (diskInfo.IsOverflow){
                            $("#" + serverId).children().find('#' + letterForId).addClass('blinking');
                        }
                        else{
                            $("#" + serverId).children().find('#' + letterForId).removeClass('blinking');
                        }
                       
                        $("#" + serverId).children().find('#letter' + diskIndex)[0].innerText = diskInfo.Letter + '/';
                        $("#" + serverId).children().find('#size' + diskIndex)[0].innerText = diskInfo.FullnessPercent + '%';
                        $("#" + serverId).children().find('#freeSpace' + diskIndex)[0].innerText = '(' + diskInfo.FreeSpaceToDisplay + ')';
                    }
                    initCharts();
                }
                catch(ex){
                    console.log(ex.message);
                }

                // Обновление информации по службам
                try{
                    var services = blocksData.ServersStatusDto[j].WindowsServicesStatuses;
                    if (services.length == 0) {
                        $("#" + serverId).children().find('.services-info-wrapper').remove();
                        $("#" + serverId).find(".services-info-wrapper").remove();
                    }
                    for (var serviceIndex = 0; serviceIndex < services.length; serviceIndex++) {
                        var name = services[serviceIndex].Name;
                        var state = services[serviceIndex].StateName;

                        var className = 'service-ok';
                        if (state != 'Running') {
                            className = 'blinking';
                        }
                        $("#" + serverId).children().find('#serviceName' + serviceIndex)[0].innerText = name;
                        $("#" + serverId).children().find('#serviceState' + serviceIndex)[0].innerHTML = '<span id="serviceState' + serviceIndex + '" class="' + className + '">' + state + '</span>';
                    }
                }
                catch (ex) {
                    console.log(ex.message);
                }
                // Обновление информации по базам
                try{
                    var baseUnderMonitoring = blocksData.ServersStatusDto[j].IsSqlBaseUnderMonitoring;
                    if (!baseUnderMonitoring) {
                        $("#" + serverId).find(".sql-info-wrapper").remove();
                    }
                    else {
                        $("#" + serverId).find("#allBasesOkCaption").remove();

                        var baseStatesHtml = '';
                        var baseProblems = blocksData.ServersStatusDto[j].SqlBasesWithProblems;
                        if (baseProblems.length > 0) {
                            $("#" + serverId).find(".baseError").remove();
                            for (var baseIndex = 0; baseIndex < baseProblems.length; baseIndex++) {
                                baseStatesHtml += '<div class="baseError"><span><b>' + baseProblems[baseIndex].Name + '</b>: ' + baseProblems[baseIndex].Status + ' ❌</span></div>';
                            }
                            $("#" + serverId).children().find('.bases-info-text').append(baseStatesHtml);
                            $("#" + serverId).children().find('.sql-info-logo').addClass('blinking1');
                        }
                        else {
                            $("#" + serverId).find(".baseError").remove();
                            $("#" + serverId).children().find('.sql-info-logo').removeClass('blinking1');
                            var allOkHtml = '<div id="allBasesOkCaption"><span>All bases are available ✔️</span></div>';
                            $("#" + serverId).children().find('.bases-info-text').append(allOkHtml);
                        }
                    }
                }
                catch (ex) {
                    console.log(ex.message);
                }
            }
        }

        function initCharts() {
            $(".sizeChart").progressPie(
                {
                    color: function (percent) {
                        return percent >= 95 ? "#FF2829" : "#00B900";
                    }
                });
        }

        $(document).ready(function () {
            setInterval(function () {
                var currentTime = new Date();
                if (currentTime - lastUpdateTime > 1000 * 60 * 5) {
                    location.reload();
                }                
            }, 50000);     
        });

        function makeServerLogicGroup(groupId, groupCaption, websiteStatesDto) {
            var serversGroupBlock = '<div class="servers-logic-group">' +
                '        <div class="servers-logic-group-caption">' +
                groupCaption +
                '        </div>' +
                '        <div id="' + groupId + '">' +
                '        </div>' +
                '    </div>';

            $("#main-block-for-adding").append(serversGroupBlock);

            if (websiteStatesDto.length > 0) {
                makeSitesBlock(groupId, websiteStatesDto);
            }
        }

        function makeSitesBlock(groupId, websiteStatesDto) {
            // Добавляем информацию по сайтам
            if (websiteStatesDto != null && websiteStatesDto.length > 0) {
                for (var i = 0; i < websiteStatesDto.length; i++) {
                    var isAvailable = websiteStatesDto[i].IsAvailable;
                    var statusText = '<div class="site-status-text-online">Status: ONLINE</div>';
                    if (!isAvailable) {
                        statusText = '<div class="blinking">Status: ERROR</div>';
                    }
                    var websitesBlock = 
                    ' <div class="block-website-main-info" id="' + websiteStatesDto[i].Id + '">'
                    + '<div class="host-name-header">' + websiteStatesDto[i].Name + '</div>'
                    + '<a target="_blank" rel="noopener noreferrer" href="' + websiteStatesDto[i].Url + '">' + websiteStatesDto[i].Url + '</a>'
                    + '<br>'
                    + statusText
                    + '</div>';
                    $("#" + websiteStatesDto[i].Id).remove();
                    $("#" + groupId).prepend(websitesBlock);
                }
            }
        }

        function makeServerBlock(blockId, logicGroupId) {
            var serverBlock = '<div class="main-resources-block" id="' + blockId + '">' +
                '        <div class="block-server-main-info">' +
                '' +
                '            <div class="server-text-info">' +
                '                <div class="host-name-header">' +
                '                    Host Name' +
                '                </div>' +
                '                <div class="ip-header">' +
                '                    IP: 111.111.111.111' +
                '                </div>' +
                '                <div class="ping-header">' +
                '                    Ping 1 ms' +
                '                </div>' +
                '            </div>' +
                '' +
                '            <div class="disk-info-wrapper">' +
                '<div><div class="icons-awesome"><i class="fa fa-hdd-o fa-2x" aria-hidden="true"></i></div> Used space (Free space)</div>' +
                '' +
                '                <div class="block-disk-sizes">' +
                '                </div>' +
                '            </div>' +
                '        </div>' +
                '        <div class="sql-info-wrapper">' +                
                '            <div class="sql-info-header sql-info-logo">' +
                '               <div class="icons-awesome sql-info-logo"><i class="fa fa-database fa-2x" aria-hidden="true"></i></div>  SQL Bases' +
                '            </div>' +
                '            <div class="bases-info-text">' +
                '                <div id="allBasesOkCaption"><span>All bases available ✔️</span></div>' +
                '            </div>' +
                '        </div>      ' +
                '        <div class="services-info-wrapper">' +
                '            <div class="services-info-header">' +
                '              <div class="icons-awesome"><i class="fa fa-cogs fa-2x" aria-hidden="true"></i></div>  Windows Services' +
                '            </div>' +
                '            <div class="services-info-text">' +
                '            </div>' +
                '        </div>' +
                '        <div id="commonErrorText_' + blockId + '" class="common-error-text">' +
                '        </div>' +
                '    </div>';
            $("#" + logicGroupId ).append(serverBlock);
            
        }
    </script>
}

@*
                    0. Общий доступ к интернету

                    1. Проверять доступность FTP (расшаренных ресурсов и т.д.)
                        \\msk-ftp.sela.ru\mskftp_sela_ru\1C\Images\Order

                    2. Состояние сайтов (вэб-отчёты, оргструктура, Git, web-интерфейс MSCRM) (например, проверять доступность по ключевым тэгам на главной странице или что-то ещё придумать)
                    Проверять: (пока не нужно)
                        расположение утилиты в Китае 192.168.50.17 (selachina-iis.sela.ru)
                        (mskisa.sela.ru) \\10.16.0.1\ISALogs - москва
                        \\192.168.23.1\ISALogs - томилино
                        \\10.8.0.1\ISALogs - спб
                        \\192.168.50.2\ISALogs - китай

                    3. Пинговать все основные серверы по группам (например, раз в 5 -10 минут) (манзана, 1С, хранилище и т.д.)
                        mskerp-sql (Оргструктура, КИС)
                            v82SelaCIS
                            v83NsiERP
                            v83BuhDTP-net
                            SelaDWH
                            v83BuhCorp
                            SSISDB
                            1CCoupons
                            OrgStructure
                            Forum
                            v83BuhCorp_exp
                            v83IM_OTTO
                        isr-db2
                            ReportServer
                            ReportServerTempDB
                            Doors2
                            Edik
                            FromExcel
                            ITSite
                            RussianWarehouse
                            Sela
                            Sela_History
                            Sela_Manual_History
                            SelaFinance
                            selaFinance_History
                            BankR
                            EdikRU
                            EdikSPB
                            Z_Edik_History
                            Z_EdikLTV_History
                            Z_EdikRU_History
                            abcc
                            Z_EdikSPB_History
                            Sela_logs
                            distributionTest1
                            Israel
                            SelaTemp
                            Sela_old
                            SelaFinance_arch
                            SelaAdditional
                            SelaAdditional_History
                        selachina-db
                            Sela
                        mskcsharp-dev.sela.ru (Тестовый)


                    4. Проверять состояние виндовых сервисов (1с, манзана, службы SQL )
                    5. По возможности мониторить температуру в серверной
                    6. Проверять состояние почты (автоматическая тестовая отправка - получение писем на внешнюю почту)
                    7. Мониторить свободное место на дисках (в самых критичных местах) и наличие этих дисков --
                    8. Состояние сервисов Manzana

                        mskcrm-sql.sela.ru (10.16.6.30)
                            Базы:
                                ReportServer
                                ReportServerTempDB
                                MSCRM_CONFIG
                                SELA_MSCRM
                                Loyalty_Internal
                                Loyalty_Scheduler
                                Sela_DS
                                Sela_ODATA
                                Sela_Transit
                                Sela_Log
                                Sela_Reserve
                                ManzanaSupport
                                for_update_sum1c
                                SailPlay_backup
                                Sela_Filtr
                                ManzanaMonitoring_V2
                                Diagnostics
                                Sela_DS_History
                        mskcrm-app.sela.ru (10.16.6.31)
                        mskcrm-pos.sela.ru (10.16.6.32)
                        mskcrm-com.sela.ru (10.16.6.33)
                            Службы рассылок:
                                ViberMailingService
                                Manzana.SMPPService.Sela1
                                Manzana.SMPPService.Sela2
                        mskcrm-pc.sela.ru (10.16.6.34)
                        mskcrm-dwh.sela.ru (10.16.6.35)
                            Базы:
                                ReportServer
                                ReportServerTempDB
                                primula_etl
                                Sela_Contacts_WAREHOUSE
                                SELA_Integration
                                Sela_STAGE
                                Sela_WAREHOUSE
                                SSISDB
                                Sela_WebAnalytics
                                Sela_Integration_start07062017
                                SELA_events
                                Sela_Integration_start12042017
                                Sela_Integration_start17052017
                                Sela_Integration_start29052017
                                Sela_Integration_start
                                ExcelImport


                    Все эти данные собираются на дашборд сайта, доступного для техподдержки.
                    При наиболее критичных ошибках отправляется уведомление от телеграмм-бота (или по почте / смс)

    Для свободного места на дисках:
    https://www.jqueryscript.net/chart-graph/Dynamic-Pie-Chart-style-Progress-Bar-with-jQuery-SVG-progresspieSVG.html
*@