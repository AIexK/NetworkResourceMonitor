function updateSyncLastTime() { var a = new Date(); lastUpdateTime = a; var b = a.getHours(); b < 10 && (b = '0' + b); var c = a.getMinutes(); c < 10 && (c = '0' + c); var d = a.getSeconds(); d < 10 && (d = '0' + d), $('#lastUpdateTime').text('Last update ' + b + ':' + c + ':' + d); } function createBlocks(a) { if (a == null) return; for (var f = 0; f < a.ServersLogicGroupsDto.length; f++) { var n = a.ServersLogicGroupsDto[f].Id; var o = a.ServersLogicGroupsDto[f].Caption; var p = a.ServersLogicGroupsDto[f].WebsiteStatesDto; makeServerLogicGroup(n, o, p); } for (var b = 0; b < a.ServersStatusDto.length; b++) { var c = a.ServersStatusDto[b].Id; var q = a.ServersStatusDto[b].LogicGroupId; makeServerBlock(c, q); var r = a.ServersStatusDto[b].DiskSpace; for (var d = 0; d < r.length; d++) { var h = a.ServersStatusDto[b].DiskSpace[d]; var s = h.Letter.replace(':', ''); var t = $('<div id="disk_' + s + '"><span id="letter' + d + '">' + h.Letter + '/</span><span id="size' + d + '" class="sizeChart">' + h.FullnessPercent + '%</span> <span  id="freeSpace' + d + '" >(' + h.FreeSpaceToDisplay + ') </span></div>'); $('#' + c).children().find('.block-disk-sizes').append(t); } var g = a.ServersStatusDto[b].WindowsServicesStatuses; g.length == 0 && $('#' + c).find('.services-info-wrapper').remove(); for (var e = 0; e < g.length; e++) { var u = g[e].Name; var k = g[e].StateName; var l = 'service-ok'; k != 'Running' && (l = 'blinking'); var v = '<div><span id="serviceName' + e + '">' + u + '</span> <span id="serviceState' + e + '" class="' + l + '">' + k + '</span></div>'; $('#' + c).children().find('.services-info-text').append(v); } g.length <= 5 && $('#' + c).find('.block-server-main-info').css('display', 'block'); var w = a.ServersStatusDto[b].IsSqlBaseUnderMonitoring; if (!w) $('#' + c).find('.sql-info-wrapper').remove(); else { $('#' + c).find('#allBasesOkCaption').remove(); var m = ''; var j = a.ServersStatusDto[b].SqlBasesWithProblems; for (var i = 0; i < j.length; i++) m += '<div class="baseError"><span><b>' + j[i].Name + '</b>: ' + j[i].Status + ' \u274C</span></div>'; $('#' + c).children().find('.bases-info-text').append(m), $('#' + c).children().find('.sql-info-logo').addClass('blinking1'); } } initCharts(), updateBlocks(a); } function updateBlocks(c) { if (c == null) return; for (var b = 0; b < c.ServersStatusDto.length; b++) { var f = c.ServersStatusDto[b]; var a = f.Id; var k = ''; f.Ping == 0 ? k = '< 1' : k = f.Ping, $('#' + a).children().find('.host-name-header')[0].innerText = f.HostName, $('#' + a).children().find('.ip-header')[0].innerText = 'IP: ' + f.Ip, $('#' + a).children().find('.ping-header')[0].innerText = 'Ping: ' + k + ' ms'; try { var p = c.ServersStatusDto[b].DiskSpace; for (var e = 0; e < p.length; e++) { var g = c.ServersStatusDto[b].DiskSpace[e]; var q = 'disk_' + g.Letter; var l = q.replace(':', ''); g.IsOverflow ? $('#' + a).children().find('#' + l).addClass('blinking') : $('#' + a).children().find('#' + l).removeClass('blinking'), $('#' + a).children().find('#letter' + e)[0].innerText = g.Letter + '/', $('#' + a).children().find('#size' + e)[0].innerText = g.FullnessPercent + '%', $('#' + a).children().find('#freeSpace' + e)[0].innerText = '(' + g.FreeSpaceToDisplay + ')'; } initCharts(); } catch (ex) { console.log(ex.message); } try { var h = c.ServersStatusDto[b].WindowsServicesStatuses; h.length == 0 && ($('#' + a).children().find('.services-info-wrapper').remove(), $('#' + a).find('.services-info-wrapper').remove()); for (var d = 0; d < h.length; d++) { var r = h[d].Name; var m = h[d].StateName; var n = 'service-ok'; m != 'Running' && (n = 'blinking'), $('#' + a).children().find('#serviceName' + d)[0].innerText = r, $('#' + a).children().find('#serviceState' + d)[0].innerHTML = '<span id="serviceState' + d + '" class="' + n + '">' + m + '</span>'; } } catch (ex) { console.log(ex.message); } try { var s = c.ServersStatusDto[b].IsSqlBaseUnderMonitoring; if (!s) $('#' + a).find('.sql-info-wrapper').remove(); else { $('#' + a).find('#allBasesOkCaption').remove(); var o = ''; var i = c.ServersStatusDto[b].SqlBasesWithProblems; if (i.length > 0) { $('#' + a).find('.baseError').remove(); for (var j = 0; j < i.length; j++) o += '<div class="baseError"><span><b>' + i[j].Name + '</b>: ' + i[j].Status + ' \u274C</span></div>'; $('#' + a).children().find('.bases-info-text').append(o), $('#' + a).children().find('.sql-info-logo').addClass('blinking1'); } else { $('#' + a).find('.baseError').remove(), $('#' + a).children().find('.sql-info-logo').removeClass('blinking1'); var t = '<div id="allBasesOkCaption"><span>All bases are available \u2714️</span></div>'; $('#' + a).children().find('.bases-info-text').append(t); } } } catch (ex) { console.log(ex.message); } } } function initCharts() { $('.sizeChart').progressPie({ color: function (a) { return a >= 95 ? '#FF2829' : '#00B900'; } }); } function makeServerLogicGroup(a, d, b) { var c = '<div class="servers-logic-group">        <div class="servers-logic-group-caption">' + d + '        </div>' + '        <div id="' + a + '">' + '        </div>' + '    </div>'; $('#main-block-for-adding').append(c), b.length > 0 && makeSitesBlock(a, b); } function makeSitesBlock(f, a) { if (a != null && a.length > 0) for (var b = 0; b < a.length; b++) { var d = a[b].IsAvailable; var c = '<div class="site-status-text-online">Status: ONLINE</div>'; d || (c = '<div class="blinking">Status: ERROR</div>'); var e = ' <div class="block-website-main-info" id="' + a[b].Id + '">' + '<div class="host-name-header">' + a[b].Name + '</div>' + '<a target="_blank" rel="noopener noreferrer" href="' + a[b].Url + '">' + a[b].Url + '</a>' + '<br>' + c + '</div>'; $('#' + a[b].Id).remove(), $('#' + f).prepend(e); } } function makeServerBlock(a, c) { var b = '<div class="main-resources-block" id="' + a + '">' + '        <div class="block-server-main-info">' + '' + '            <div class="server-text-info">' + '                <div class="host-name-header">' + '                    Host Name' + '                </div>' + '                <div class="ip-header">' + '                    IP: 111.111.111.111' + '                </div>' + '                <div class="ping-header">' + '                    Ping 1 ms' + '                </div>' + '            </div>' + '' + '            <div class="disk-info-wrapper">' + '<div><div class="icons-awesome"><i class="fa fa-hdd-o fa-2x" aria-hidden="true"></i></div> Used space (Free space)</div>' + '' + '                <div class="block-disk-sizes">' + '                </div>' + '            </div>' + '        </div>' + '        <div class="sql-info-wrapper">' + '            <div class="sql-info-header sql-info-logo">' + '               <div class="icons-awesome sql-info-logo"><i class="fa fa-database fa-2x" aria-hidden="true"></i></div>  SQL Bases' + '            </div>' + '            <div class="bases-info-text">' + '                <div id="allBasesOkCaption"><span>All bases available \u2714️</span></div>' + '            </div>' + '        </div>      ' + '        <div class="services-info-wrapper">' + '            <div class="services-info-header">' + '              <div class="icons-awesome"><i class="fa fa-cogs fa-2x" aria-hidden="true"></i></div>  Windows Services' + '            </div>' + '            <div class="services-info-text">' + '            </div>' + '        </div>' + '        <div id="commonErrorText_' + a + '" class="common-error-text">' + '        </div>' + '    </div>'; $('#' + c).append(b); } const RESULT_OK = 0; const RESULT_COMMON_HANDLED_ERROR = -2; var counter = 0; var isFirstInit = !0; var lastUpdateTime; $(function () { var a = $.connection.notificationHub; a.client.displayMessage = function (h) { if (parsedMessage = JSON.parse(h), parsedMessage.ErrorCode == RESULT_OK || parsedMessage.ErrorCode == RESULT_COMMON_HANDLED_ERROR) { if (isFirstInit) $('.outer-spinner').remove(), createBlocks(parsedMessage.Data), updateSyncLastTime(), isFirstInit = !1; else { $('.update-spinner').css('display', 'inline-block'), updateBlocks(parsedMessage.Data); for (var a = 0; a < parsedMessage.Data.ServersLogicGroupsDto.length; a++) { var f = parsedMessage.Data.ServersLogicGroupsDto[a].Id; var d = parsedMessage.Data.ServersLogicGroupsDto[a].WebsiteStatesDto; d != null && d.length != 0 && makeSitesBlock(f, d); } setTimeout(function () { $('.update-spinner').css('display', 'none'), updateSyncLastTime(); }, 1500); } if (parsedMessage.ErrorCode == RESULT_OK) { var b = parsedMessage.Data.ServersStatusDto; for (var a = 0; a < b.length; a++) { var c = b[a].Id; $('#commonErrorText_' + c).css('display', 'none'); } } if (parsedMessage.ErrorCode == RESULT_COMMON_HANDLED_ERROR) try { var b = parsedMessage.Data.ServersStatusDto; for (var a = 0; a < b.length; a++) { var c = b[a].Id; var e = b[a].ErrorMessage; if (e != '') { var g = '<div><div class="alert-triangle blinking1"><i class="fa fa-exclamation-triangle fa-3x" aria-hidden="true"></i> <div class="error-caption-text">ERROR</div></div><br><div class="error-text-wrapper">' + e + '</div></div>'; $('#' + c).find('#commonErrorText_' + c)[0].innerHTML = g, $('#commonErrorText_' + c).css('display', 'inline-block'); } } } catch (ex) { console.log(parsedMessage.ServerId + ' Message: ' + ex.message); } } else alert(parsedMessage.Message); }, $.connection.hub.start(); }), $(document).ready(function () { setInterval(function () { var a = new Date(); a - lastUpdateTime > 300000 && location.reload(); }, 50000); });